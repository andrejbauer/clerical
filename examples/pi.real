(* compute pi as the unique root of sine(x) contained in (3, 4)  *)

function real prec(int x):
  1.0 /. real(shift(1, x))

function bool bound(real x, real d):
  case
    abs(x) <. d => true
  | abs(x) >. d /. real(2) => false
  end

function real sin (real x):
  lim p =>
    var epsilon := prec(p)
    and m := 0
    and s := real(1)
    and A := real(0)
    and q := x in
    while ! bound (q, epsilon)
    do
      m := m + 1;
      A := A +. q *. s;
      s := s *. real(-1);
      q := q *. x *. x /. real(2 * m + 1) /. real(2 * m)
    end; A

function real pi ():
  lim n =>
    var k := 0
    and a := real(3)
    and b := real(4) in
    while k < n
    do
      var x := (a +. b) /. real(2) in
      if
        real (0) <. sin (x)
      then
        a := x
      else
        b := x
      end
      ;
      k := k + 1
    end; (a +. b) /. real(2)
